#image: registry.gitlab.ec.pe/contenidos/arc
image: circleci/node:8.11-browsers
variables:
  NAMEPROJECT: arc

stages:
  - install
  - build
  - deploy
  - test
  - code-quality
  - test-intsall-e2e
  - test-e2e
  - package
  - deploy
  - monitoring
  - documentation
  - release
  - cleanup

cache:
  key: '$CI_JOB_NAME-$CI_COMMIT_REF_SLUG'
  paths:
    - .npm
    - cache/Cypress
    #- node_modules

install_dependencies:
  stage: install
  script:
    - npm install
  artifacts:
    when: on_success
    paths:
      - node_modules/
    expire_in: 1 day
  cache:
    key: '$CI_JOB_NAME-$CI_COMMIT_REF_SLUG'
    paths:
      - node_modules/
    policy: push
  when: always

build-verify:
  stage: build
  dependencies:
    - install_dependencies
  script:
    - ls
    - npm run zip || true
    - mkdir artifacts
    - mv components/ config/ content/ environment/ jest/ properties/ resources/  .babelrc .eslintrc  .prettierrc  gulpfile.js  package.json  setupTests.js -t artifacts/
  artifacts:
    when: on_success
    paths:
      - artifacts/
      - node_modules/
    expire_in: 1 day
  after_script:
    - pwd
    - ls artifacts/resources/
  only:
    - sandbox
  tags:
    - severless_api

deploy-sandbox:
  stage: deploy
  dependencies:
    - build-verify
  cache:
    key: '$CI_JOB_NAME-$CI_COMMIT_REF_SLUG'
    paths:
      - node_modules/
    policy: pull
  variables:
    ARC_DOMAIN: $ARC_DOMAIN_SANDBOX
    BUNDLE_NAME: $CI_COMMIT_REF_SLUG
    PB_VERSION: latest
    BUNDLE_FILE: bundle.zip
  script:
    - export BUNDLE_NAME="$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    - export ARC_DOMAIN=$ARC_DOMAIN_SANDBOX
    - export TOKEN_ARC=$TOKEN_SANDBOX
    - export ENV="$CI_JOB_STAGE"
    - cd artifacts/
    - zip -r bundle.zip components/ config/ content/ environment/ jest/ properties/ resources/ .babelrc .eslintrc  .prettierrc  gulpfile.js  package.json  setupTests.js
    - ls -l bundle.zip
    - cp bundle.zip  ../bundle.zip
    - node config/deploy/deploy.js
  only:
    - sandbox
  tags:
    - severless_api

eslint-dev:
  stage: test
  dependencies:
    - install_dependencies
  cache:
    key: '$CI_JOB_NAME-$CI_COMMIT_REF_SLUG'
    paths:
      - node_modules/
    policy: pull
  script:
    # Run eslint
    - npm run lint
  allow_failure: True
  except:
    - sandbox
    - master
  tags:
    - severless_api

coverage-dev:
  stage: test
  dependencies:
    - install_dependencies
  cache:
    paths:
      - node_modules/
  script:
    - ls
    - npm run test:coverage
  allow_failure: True
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'
  except:
    - sandbox
    - master
  tags:
    - severless_api

code-quality:
  stage: code-quality
  image: linux982079/codequality:v1
  variables:
    SONAR_URL: http://34.219.160.206:9000
    SONAR_ANALYSIS_MODE: issues
  script:
    - touch sonar-project.properties
    - echo sonar.projectKey=arc >> sonar-project.properties
    - echo sonar.sources=. >> sonar-project.properties
    - echo sonar.gitlab.project_id=git@gitlab.ec.pe:contenidos/arc.git >> sonar-project.properties
    - echo sonar.login=$TOKEN_SONAR >> sonar-project.properties
    - echo sonar.sourceEncoding=UTF-8 >> sonar-project.properties
    - cat sonar-project.properties
    - gitlab-sonar-scanner
  except:
    - sandbox
    - master
  tags:
    - severless_api

code-quality-reports:
  stage: code-quality
  image: linux982079/codequality:v1
  variables:
    SONAR_URL: http://34.219.160.206:9000
    SONAR_ANALYSIS_MODE: publish
  script:
    - touch sonar-project.properties
    - echo sonar.projectKey=arc >> sonar-project.properties
    - echo sonar.sources=. >> sonar-project.properties
    - echo sonar.gitlab.project_id=git@gitlab.ec.pe:contenidos/arc.git >> sonar-project.properties
    - echo sonar.login=$TOKEN_SONAR >> sonar-project.properties
    - echo sonar.sourceEncoding=UTF-8 >> sonar-project.properties
    - cat sonar-project.properties
    - gitlab-sonar-scanner
  except:
    - sandbox
    - master
  tags:
    - severless_api

build-verify_master:
  stage: build
  dependencies:
    - install_dependencies
  script:
    - ls
    - npm run zip || true
    - mkdir artifacts
    - mv components/ config/ content/ environment/ jest/ properties/ resources/  .babelrc .eslintrc  .prettierrc  gulpfile.js  package.json  setupTests.js -t artifacts/
  artifacts:
    when: on_success
    paths:
      - artifacts/
      - node_modules/
    expire_in: 1 day
  after_script:
    - echo "hola"
    - pwd
    - ls resources/
  only:
    - master
  tags:
    - severless_api

deploy-master:
  stage: deploy
  dependencies:
    - build-verify_master
  cache:
    key: '$CI_JOB_NAME-$CI_COMMIT_REF_SLUG'
    paths:
      - node_modules/
    policy: pull
  variables:
    ARC_DOMAIN: $ARC_DOMAIN_SANDBOX
    BUNDLE_NAME: $CI_COMMIT_REF_SLUG
    PB_VERSION: latest
    BUNDLE_FILE: bundle.zip
  script:
    - pwd
    - export BUNDLE_NAME="$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    - export ARC_DOMAIN=$ARC_DOMAIN_MASTER
    - export ENV="$CI_JOB_STAGE"
    - export TOKEN_ARC=$TOKEN_MASTER
    - cd artifacts/
    - ls
    - zip -r bundle.zip components/ config/ content/ environment/ jest/ properties/ resources/ .babelrc .eslintrc  .prettierrc  gulpfile.js  package.json  setupTests.js
    - ls -l bundle.zip
    - cp bundle.zip  ../bundle.zip
    - node config/deploy/deploy.js
  only:
    - master
  tags:
    - severless_api

publish:
  image: registry.gitlab.ec.pe/contenidos/arc
  stage: release
  dependencies:
    - deploy-master
  before_script:
    #- apt-get update
    - apt-get install python-dev python-pip -y
    - apt-get install git -y
    - npm install
    - yarn install --frozen-lockfile
  script:
    - yarn add --dev @hutson/semantic-delivery-gitlab
    - yarn add --dev conventional-changelog-eslint
    - ./node_modules/.bin/semantic-delivery-gitlab  --token xfctBNu4ACq4AD8AGBCg  --preset eslint
  only:
    - master
  tags:
    - severless_api
