@function get-fixed-class($value) {
  @if $value==100% {
    $value: full;
  }

  @if $value==none {
    $value: hidden;
  }

  @return $value;
}

/** ----------------------------*
*          DIMENSIONS           *
*-------------------------------*/

$map-dimens: 100%, auto, inherit, 0;

@each $dimen-value in $map-dimens {
  $dimen-class: get-fixed-class($dimen-value);

  @include build-class(w-#{$dimen-class}, width, $dimen-value);
  @include build-class(h-#{$dimen-class}, height, $dimen-value);
}

/** ----------------------------*
*        OBJECT-FIT & POS       *
*-------------------------------*/

$map-objects: (
  cover: object-fit,
  contain: object-fit,
  center: object-position,
  top: object-position,
  bottom: object-position,
);

@each $object-val, $object-attr in $map-objects {
  @include build-class(object-#{$object-val}, $object-attr, $object-val);
}

/** ----------------------------*
*           DISPLAYS            *
*-------------------------------*/

$map-displays: block, flex, grid, inline, inline-block, table, none;
// inline-flex

@each $display in $map-displays {
  $display-class: get-fixed-class($display);

  @include build-class($display-class, display, $display);
}

// TODO:_Homologar las clases de no-<device>
.no-desktop,
[id*="ads-m"],
[id*="ads_m"] {
  @media (--tablet) {
    display: none;
  }
}

.no-mobile,
.non-mobile,
[id*="ads-d"],
[id*="ads_d"] {
  @media screen and (max-width: 639px) {
    display: none;
  }
}

[id*="ads-m"],
[id*="ads_m"],
[id*="ads-d"],
[id*="ads_d"] {
  text-align: center;

  @media print {
    display: none;
  }
}

.non-tablet {
  @media screen and (min-width: 640px) and (max-width: 1023px) {
    display: none;
  }
}

.non-desktop {
  @media screen and (min-width: 1024px) {
    display: none;
  }
}

.clearfix {
  display: table;
  content: "";
}

/** ----------------------------*
*           OVERFLOW            *
*-------------------------------*/

.overflow-y {
  overflow-y: scroll;
}

.overflow-x {
  overflow-x: scroll;
}

.overflow-y-auto {
  overflow-y: auto;
}

.overflow-x-auto {
  overflow-x: auto;
}

.overflow-hidden {
  overflow: hidden;
}

.overflow-x-hidden {
  overflow-x: hidden;
}

.overflow-y-hidden {
  overflow-y: hidden;
}

.overflow-hidden-ios {
  overflow: hidden; // TODO: !important retirado por amp
  height: 100%;
}

/** ----------------------------*
*           POSITION            *
*-------------------------------*/

$map-pos: relative, absolute;

@each $pos in $map-pos {
  @include build-class(position-#{$pos}, position, $pos);
}

$map-pos-0: top, right, bottom, left;

@each $pos-0 in $map-pos-0 {
  @include build-class(#{$pos-0}-0, $pos-0, 0);
}

/** ----------------------------*
*               TEXT            *
*-------------------------------*/

$map-text-pos: left, center, right;

@each $text-pos in $map-text-pos {
  @include build-class(text-#{$text-pos}, text-align, $text-pos);
}

.uppercase {
  text-transform: uppercase;
}

.capitalize {
  text-transform: capitalize;
}

.underline {
  text-decoration: underline;
}

/** ----------------------------*
*             FONTS             *
*-------------------------------*/

.primary-font {
  font-family: $primary-font; // TODO: !important retirado por amp
}

.secondary-font {
  font-family: $secondary-font; // TODO: !important retirado por amp
}

.tertiary-font {
  font-family: $tertiary-font;
}

$map-font-weight: (
  thin: 200,
  normal: 400,
  bold: 700,
  xbold: 900,
);

@each $font-weight, $font-weight-val in $map-font-weight {
  @include build-class(font-#{$font-weight}, font-weight, $font-weight-val);
}

/** ----------------------------*
*            RADIUS             *
*-------------------------------*/

$map-radius: (
  none: 0,
  sm: 4px,
  md: 16px,
  lg: 50px,
  "": 50%,
);

@each $radius-class, $radius in $map-radius {
  @if $radius-class== "" {
    @include build-class(rounded, border-radius, $radius);
  } @else {
    @include build-class(rounded-#{$radius-class}, border-radius, $radius);
  }
}

/******* Extra ********/

.cursor-pointer {
  cursor: pointer;
}

.no-selected {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* 

No es un adios, es un hasta luego

.lazy {
  filter: blur(10px);
} */

.font-0 {
  font-size: 0;
}

.border-none {
  border: none;
}

.opacity-0 {
  opacity: 0;
}

.opacity-1 {
  opacity: 1;
}

.wrapper {
  max-width: 1366px;
}

.md\:row-1 {
  @media (--tablet) {
    grid-row: span 1;
    height: ($row-height * 1);
  }
}

.md\:row-2 {
  @media (--tablet) {
    grid-row: span 1;
    height: ($row-height * 2) + 20px;
  }
}
.pl-35 {
  padding-left: 35px;
}
.pl-40 {
  padding-left: 45px;
}
.pl-45 {
  padding-left: 45px;
}
.pl-50 {
  padding-left: 50px;
}
.pl-55 {
  padding-left: 55px;
}
.pl-60 {
  padding-left: 60px;
}
.pl-65 {
  padding-left: 65px;
}
.pl-70 {
  padding-left: 70px;
}
.pl-75 {
  padding-left: 75px;
}

.mb-45 {
  margin-bottom: 50px;
}
.mb-50 {
  margin-bottom: 50px;
}
.pt-50 {
  padding-top: 50px;
}
.pb-50 {
  padding-bottom: 50px;
}
.mt-50 {
  margin-top: 50px;
}
.pb-60 {
  padding-bottom: 60px;
}
.lg\:mt-60 {
  margin-top: 60px;
}
.md\:mt-60 {
  margin-top: 60px;
}

.md\:pl-40 {
  padding-left: 40px;
}
.md\:pr-40 {
  padding-right: 40px;
}
.md\:pr-40 {
  padding-right: 40px;
}
.md\:pt-40 {
  padding-top: 40px;
}
.md\:pb-40 {
  padding-bottom: 40px;
}
.md\:ml-40 {
  margin-left: 40px;
}
.pr-40 {
  padding-right: 40px;
}
.pl-40 {
  padding-left: 40px;
}
.pb-40 {
  padding-bottom: 40px;
}
.pt-40 {
  padding-top: 40px;
}
.mb-40 {
  margin-bottom: 40px;
}
.mt-40 {
  margin-top: 40px;
}
.lg\:mb-40 {
  margin-bottom: 60px;
}
.lg\:p-40 {
  padding: 40px;
}
.pt-35 {
  padding-top: 40px;
}
.lg\:ml-35 {
  margin-left: 35px;
}
